{"ast":null,"code":"var _jsxFileName = \"/Users/yediwang/spotify-example/src/components/Header/Header.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux'; // import PropTypes from \"prop-types\";\n\nimport avatar from '../../assets/img/avatar.png';\nimport search_icon from '../../assets/img/search.png';\nimport menu_icon from '../../assets/img/menu.png';\nimport { updateSearchResult, updateToken } from '../../actions';\n\nvar Spotify = require('spotify-web-api-js');\n\nvar spotifyApi = new Spotify();\n\nclass Header extends React.Component {\n  componentWillMount() {\n    this.getToken();\n  }\n\n  getToken() {\n    // const hash = window.location.hash\n    // .substring(1)\n    // .split('&')\n    // .reduce(function (initial, item) {\n    //   if (item) {\n    //     var parts = item.split('=');\n    //     initial[parts[0]] = decodeURIComponent(parts[1]);\n    //   }\n    //   return initial;\n    // }, {});\n    // window.location.hash = '';\n    // let _token = hash.access_token;\n    let _token = \"BQCnZz6tU14teaKLKejKJEC-fb1LkjdP5UDfDIuriAaIu7glJalwIY4YIsb4-abbp0RueqswZzha_HDpBpU\"; // const authEndpoint = 'https://accounts.spotify.com/authorize';\n    // const clientId = '72c3e22f5abc4944b8f2c1017ad1ac96';\n    // const redirectUri = 'http://localhost:3000/';\n    // if (!_token) {\n    //   window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true`;\n    // }\n\n    spotifyApi.setAccessToken(_token);\n    this.props.updateToken(_token);\n  }\n\n  handleSearch(event) {\n    const search_value = event.target.value;\n    let result;\n    spotifyApi.searchArtists(search_value, {\n      limit: 4\n    }).then(function (artists_data) {\n      result.artists_data = {\n        1: artists_data\n      };\n      result.artists_currentPage = 1;\n      spotifyApi.searchTracks(search_value, {\n        limit: 8\n      }).then(function (tracks_data) {\n        result.tracks_data = {\n          1: tracks_data\n        };\n        result.tracks_currentPage = 1;\n\n        if (artists_data.length === 0 && tracks_data.length === 0) {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        } else {\n          result.result_flag = 1;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this), function (err) {\n        console.log(err);\n\n        if (search_value === '') {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        } else {\n          result.result_flag = 2;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this));\n    }.bind(this), function (err) {\n      console.log(err);\n\n      if (search_value === '') {\n        result.result_flag = 0;\n        this.props.updateSearchResult(result);\n      } else {\n        result.result_flag = 2;\n        this.props.updateSearchResult(result);\n      }\n    }.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar\",\n      src: avatar,\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"search_icon\",\n      src: search_icon,\n      alt: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"search_input\",\n      type: \"text\",\n      name: \"spotify_search\",\n      placeholder: \"Search songs, artists...\",\n      onChange: event => this.handleSearch(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Premium\"), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Help\"), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"img\", {\n      className: \"menu_icon\",\n      src: menu_icon,\n      alt: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n} // Header.propTypes = {\n//   classes: PropTypes.object.isRequired\n// }\n\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result)),\n  updateToken: token => dispatch(updateToken(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/yediwang/spotify-example/src/components/Header/Header.jsx"],"names":["React","connect","avatar","search_icon","menu_icon","updateSearchResult","updateToken","Spotify","require","spotifyApi","Header","Component","componentWillMount","getToken","_token","setAccessToken","props","handleSearch","event","search_value","target","value","result","searchArtists","limit","then","artists_data","artists_currentPage","searchTracks","tracks_data","tracks_currentPage","length","result_flag","bind","err","console","log","render","mapStateToProps","state","mapDispatchToProps","dispatch","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\n// import PropTypes from \"prop-types\";\n\nimport avatar from '../../assets/img/avatar.png';\nimport search_icon from '../../assets/img/search.png';\nimport menu_icon from '../../assets/img/menu.png';\n\nimport { updateSearchResult, updateToken } from '../../actions';\n\nvar Spotify = require('spotify-web-api-js');\nvar spotifyApi = new Spotify();\n\nclass Header extends React.Component {\n\n  componentWillMount() {\n    this.getToken();\n  }\n\n  getToken() {\n    // const hash = window.location.hash\n    // .substring(1)\n    // .split('&')\n    // .reduce(function (initial, item) {\n    //   if (item) {\n    //     var parts = item.split('=');\n    //     initial[parts[0]] = decodeURIComponent(parts[1]);\n    //   }\n    //   return initial;\n    // }, {});\n    // window.location.hash = '';\n\n    // let _token = hash.access_token;\n    let _token = \"BQCnZz6tU14teaKLKejKJEC-fb1LkjdP5UDfDIuriAaIu7glJalwIY4YIsb4-abbp0RueqswZzha_HDpBpU\";\n\n    // const authEndpoint = 'https://accounts.spotify.com/authorize';\n    // const clientId = '72c3e22f5abc4944b8f2c1017ad1ac96';\n    // const redirectUri = 'http://localhost:3000/';\n\n    // if (!_token) {\n    //   window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true`;\n    // }\n\n    spotifyApi.setAccessToken(_token);\n    this.props.updateToken(_token);\n    \n  }\n\n  handleSearch(event) {\n    const search_value = event.target.value;\n    let result;\n\n    spotifyApi.searchArtists(search_value, {limit: 4})\n    .then(\n      function(artists_data) {\n        result.artists_data = {1: artists_data};\n        result.artists_currentPage = 1;\n\n        spotifyApi.searchTracks(search_value, {limit: 8})\n        .then(\n          function(tracks_data) {\n            result.tracks_data = {1: tracks_data};\n            result.tracks_currentPage = 1;\n            if(artists_data.length === 0 && tracks_data.length === 0) {\n              result.result_flag = 0;\n              this.props.updateSearchResult(result);\n            }\n            else {\n              result.result_flag = 1;\n              this.props.updateSearchResult(result);\n            }\n          }.bind(this),\n          function(err) {\n            console.log(err);\n            if(search_value === '') {\n              result.result_flag = 0;\n              this.props.updateSearchResult(result);\n            }\n            else {\n              result.result_flag = 2;\n              this.props.updateSearchResult(result);\n            }\n          }.bind(this)\n        );\n      }.bind(this),\n      function(err) {\n        console.log(err);\n        if(search_value === '') {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        }\n        else {\n          result.result_flag = 2;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this)\n    );\n  }\n\n  render() {\n    return (\n      <header>\n        <div>\n          <img className=\"avatar\" src={avatar} alt=\"avatar\" />\n          <img className=\"search_icon\" src={search_icon} alt=\"search\" />\n          <input className=\"search_input\" type=\"text\" name=\"spotify_search\" placeholder=\"Search songs, artists...\" onChange={event => this.handleSearch(event)}></input>\n        </div>\n        <div>\n          <span className=\"helper\" />\n          <span className=\"header_item\">Premium</span>\n          <span className=\"header_item\">Help</span>\n          <span className=\"header_item\">Download</span>\n          <img className=\"menu_icon\" src={menu_icon} alt=\"menu\" />\n        </div>\n      </header>\n    );\n  }\n}\n\n// Header.propTypes = {\n//   classes: PropTypes.object.isRequired\n// }\n\nconst mapStateToProps = state => ({\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result)),\n  updateToken: token => dispatch(updateToken(token))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)"]},"metadata":{},"sourceType":"module"}