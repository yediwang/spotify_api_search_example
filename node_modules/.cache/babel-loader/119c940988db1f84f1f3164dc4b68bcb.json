{"ast":null,"code":"var _jsxFileName = \"/Users/yediwang/spotify-example/src/components/Header/Header.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport avatar from \"../../assets/img/avatar.png\";\nimport search_icon from \"../../assets/img/search.png\";\nimport menu_icon from \"../../assets/img/menu.png\";\nimport { updateSearchResult, updateToken } from \"../../actions\";\n\nvar Spotify = require(\"spotify-web-api-js\");\n\nvar spotifyApi = new Spotify();\n\nclass Header extends React.Component {\n  componentWillMount() {\n    this.getToken();\n  }\n\n  getToken() {\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n    const authEndpoint = \"https://accounts.spotify.com/authorize\";\n    const clientId = \"72c3e22f5abc4944b8f2c1017ad1ac96\";\n    const redirectUri = \"http://localhost:3000/\";\n\n    if (!_token) {\n      window.location = \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&response_type=token&show_dialog=true\");\n    }\n\n    spotifyApi.setAccessToken(_token);\n    this.props.updateToken(_token);\n  }\n\n  handleSearch(event) {\n    const search_value = event.target.value;\n    let result = {\n      result_flag: 0,\n      artists_data: \"\",\n      artists_currentPage: 0,\n      tracks_data: \"\",\n      tracks_currentPage: 0\n    };\n    spotifyApi.searchArtists(search_value, {\n      limit: 4\n    }).then(function (artists_data) {\n      result.artists_data = {\n        1: artists_data\n      };\n      result.artists_currentPage = 1;\n      spotifyApi.searchTracks(search_value, {\n        limit: 8\n      }).then(function (tracks_data) {\n        result.tracks_data = {\n          1: tracks_data\n        };\n        result.tracks_currentPage = 1;\n\n        if (artists_data.length === 0 && tracks_data.length === 0) {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        } else {\n          result.result_flag = 1;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this), function (err) {\n        console.log(err);\n\n        if (search_value === \"\") {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        } else {\n          result.result_flag = 2;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this));\n    }.bind(this), function (err) {\n      console.log(err);\n\n      if (search_value === \"\") {\n        result.result_flag = 0;\n        this.props.updateSearchResult(result);\n      } else {\n        result.result_flag = 2;\n        this.props.updateSearchResult(result);\n      }\n    }.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"avatar\",\n      src: avatar,\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"search_icon\",\n      src: search_icon,\n      alt: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"search_input\",\n      type: \"text\",\n      name: \"spotify_search\",\n      placeholder: \"Search songs, artists...\",\n      onChange: event => this.handleSearch(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Premium\"), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Help\"), React.createElement(\"span\", {\n      className: \"header_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"img\", {\n      className: \"menu_icon\",\n      src: menu_icon,\n      alt: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result)),\n  updateToken: token => dispatch(updateToken(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/yediwang/spotify-example/src/components/Header/Header.jsx"],"names":["React","connect","avatar","search_icon","menu_icon","updateSearchResult","updateToken","Spotify","require","spotifyApi","Header","Component","componentWillMount","getToken","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","authEndpoint","clientId","redirectUri","setAccessToken","props","handleSearch","event","search_value","target","value","result","result_flag","artists_data","artists_currentPage","tracks_data","tracks_currentPage","searchArtists","limit","then","searchTracks","length","bind","err","console","log","render","mapStateToProps","state","mapDispatchToProps","dispatch","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport avatar from \"../../assets/img/avatar.png\";\nimport search_icon from \"../../assets/img/search.png\";\nimport menu_icon from \"../../assets/img/menu.png\";\n\nimport { updateSearchResult, updateToken } from \"../../actions\";\n\nvar Spotify = require(\"spotify-web-api-js\");\nvar spotifyApi = new Spotify();\n\nclass Header extends React.Component {\n  componentWillMount() {\n    this.getToken();\n  }\n\n  getToken() {\n    const hash = window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce(function(initial, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n    window.location.hash = \"\";\n\n    let _token = hash.access_token;\n\n    const authEndpoint = \"https://accounts.spotify.com/authorize\";\n    const clientId = \"72c3e22f5abc4944b8f2c1017ad1ac96\";\n    const redirectUri = \"http://localhost:3000/\";\n\n    if (!_token) {\n      window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true`;\n    }\n\n    spotifyApi.setAccessToken(_token);\n    this.props.updateToken(_token);\n  }\n\n  handleSearch(event) {\n    const search_value = event.target.value;\n    let result = {\n      result_flag: 0,\n      artists_data: \"\",\n      artists_currentPage: 0,\n      tracks_data: \"\",\n      tracks_currentPage: 0,\n    };\n\n    spotifyApi.searchArtists(search_value, { limit: 4 }).then(\n      function(artists_data) {\n        result.artists_data = { 1: artists_data };\n        result.artists_currentPage = 1;\n\n        spotifyApi.searchTracks(search_value, { limit: 8 }).then(\n          function(tracks_data) {\n            result.tracks_data = { 1: tracks_data };\n            result.tracks_currentPage = 1;\n            if (artists_data.length === 0 && tracks_data.length === 0) {\n              result.result_flag = 0;\n              this.props.updateSearchResult(result);\n            } else {\n              result.result_flag = 1;\n              this.props.updateSearchResult(result);\n            }\n          }.bind(this),\n          function(err) {\n            console.log(err);\n            if (search_value === \"\") {\n              result.result_flag = 0;\n              this.props.updateSearchResult(result);\n            } else {\n              result.result_flag = 2;\n              this.props.updateSearchResult(result);\n            }\n          }.bind(this)\n        );\n      }.bind(this),\n      function(err) {\n        console.log(err);\n        if (search_value === \"\") {\n          result.result_flag = 0;\n          this.props.updateSearchResult(result);\n        } else {\n          result.result_flag = 2;\n          this.props.updateSearchResult(result);\n        }\n      }.bind(this)\n    );\n  }\n\n  render() {\n    return (\n      <header>\n        <div>\n          <img className=\"avatar\" src={avatar} alt=\"avatar\" />\n          <img className=\"search_icon\" src={search_icon} alt=\"search\" />\n          <input\n            className=\"search_input\"\n            type=\"text\"\n            name=\"spotify_search\"\n            placeholder=\"Search songs, artists...\"\n            onChange={(event) => this.handleSearch(event)}\n          ></input>\n        </div>\n        <div>\n          <span className=\"helper\" />\n          <span className=\"header_item\">Premium</span>\n          <span className=\"header_item\">Help</span>\n          <span className=\"header_item\">Download</span>\n          <img className=\"menu_icon\" src={menu_icon} alt=\"menu\" />\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSearchResult: (result) => dispatch(updateSearchResult(result)),\n  updateToken: (token) => dispatch(updateToken(token)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n"]},"metadata":{},"sourceType":"module"}