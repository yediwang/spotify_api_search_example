{"ast":null,"code":"var _jsxFileName = \"/Users/yediwang/spotify-example/src/layouts/Layout.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header/Header.jsx\";\nimport album_1 from \"../assets/img/album_1.png\";\nimport left_arrow from \"../assets/img/left-arrow.png\";\nimport last_page from \"../assets/img/last_page.png\";\nimport next_page from \"../assets/img/next_page.png\";\nimport last_page_gray from \"../assets/img/last_page_gray.png\";\nimport next_page_gray from \"../assets/img/next_page_gray.png\";\nimport { updateSearchResult } from \"../actions\";\n\nvar Spotify = require('spotify-web-api-js');\n\nvar spotifyApi = new Spotify();\nspotifyApi.setAccessToken('BQBpmXCRww0_J8QihEuhgG23uOcSJJv3M5JjIZln2uLxEsKbHF4siuIgvoBdxNf4cyUqGmhV0-N_SYAMFic');\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTrack: \"\",\n      all_tracks: \"\",\n      current_track_page: 1\n    };\n  }\n\n  loadMoreTracks(tracks) {\n    const req = tracks.next;\n    spotifyApi.searchTracks(req).then(function (data) {\n      console.log(data); // if(data.length === 0) {\n      //   data.result_flag = 0;\n      //   this.props.updateSearchResult(data);\n      // }\n      // else {\n      //   data.result_flag = 1;\n      //   this.props.updateSearchResult(data);\n      // }\n    }.bind(this), function (err) {\n      console.log(err); // if(search_value === '') {\n      //   err.result_flag = 0;\n      //   this.props.updateSearchResult(err);\n      // }\n      // else {\n      //   err.result_flag = 2;\n      //   this.props.updateSearchResult(err);\n      // }\n    }.bind(this));\n  }\n\n  handleTrackClick(track) {\n    this.setState({\n      selectedTrack: track\n    });\n  }\n\n  render() {\n    const selectedTrack = this.state.selectedTrack;\n    const _this$props = this.props,\n          result_flag = _this$props.result_flag,\n          tracks_data = _this$props.tracks_data,\n          tracks_currentPage = _this$props.tracks_currentPage;\n    const album_bg_div_class = result_flag === 0 ? \"bg_fullsize album_bg_div\" : \"bg_smallsize album_bg_div\";\n    const album_bg_class = result_flag === 0 ? \"bg_image_fullsize album_bg\" : \"bg_image_smallsize album_bg\";\n    const tracks = tracks_data === \"\" ? undefined : tracks_data[tracks_currentPage].tracks;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: album_bg_div_class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: album_bg_class,\n      src: selectedTrack === \"\" || selectedTrack.album.images[0] === undefined ? album_1 : selectedTrack.album.images[0].url,\n      alt: \"album_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), tracks !== undefined && React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"album_backshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"album_selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, selectedTrack === \"\" ? React.createElement(\"img\", {\n      className: \"album_selected_cover\",\n      src: album_1,\n      alt: \"album_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : selectedTrack.album.images[0] === undefined ? React.createElement(\"div\", {\n      className: \"album_selected_cover\",\n      style: {\n        display: \"inline-block\",\n        backgroundColor: \"gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: \"album_selected_cover\",\n      src: selectedTrack.album.images[0].url,\n      alt: \"album_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"search_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"left_arrow\",\n      src: left_arrow,\n      alt: \"left_arrow\",\n      onClick: () => this.props.updateSearchResult({\n        result_flag: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"search_result_title_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Search result\")), React.createElement(\"div\", {\n      className: \"search_result_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, tracks.items.length !== 0 && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Tracks\"), tracks.items.map(track => {\n      return React.createElement(\"div\", {\n        className: \"track_row\",\n        key: track.id,\n        onClick: () => this.handleTrackClick(track),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"helper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), track.album.images[2] === undefined ? React.createElement(\"div\", {\n        className: \"track_row_cover\",\n        style: {\n          display: \"inline-block\",\n          width: \"30px\",\n          height: \"30px\",\n          backgroundColor: \"gray\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        className: \"track_row_cover\",\n        src: track.album.images[2].url,\n        width: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"track_row_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, track.name));\n    }), React.createElement(\"div\", {\n      className: \"search_result_operations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tracks.previous === null ? last_page_gray : last_page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"search_result_current_page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, tracks_currentPage), React.createElement(\"img\", {\n      src: tracks.next === null ? next_page_gray : next_page,\n      onClick: () => this.loadMoreTracks(tracks),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        height: \"60px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  result_flag: state.searchResult.result_flag,\n  tracks_data: state.searchResult.tracks_data,\n  tracks_currentPage: state.searchResult.tracks_currentPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/yediwang/spotify-example/src/layouts/Layout.jsx"],"names":["React","connect","Header","album_1","left_arrow","last_page","next_page","last_page_gray","next_page_gray","updateSearchResult","Spotify","require","spotifyApi","setAccessToken","App","Component","state","selectedTrack","all_tracks","current_track_page","loadMoreTracks","tracks","req","next","searchTracks","then","data","console","log","bind","err","handleTrackClick","track","setState","render","props","result_flag","tracks_data","tracks_currentPage","album_bg_div_class","album_bg_class","undefined","album","images","url","display","backgroundColor","items","length","map","id","width","height","name","previous","mapStateToProps","searchResult","mapDispatchToProps","dispatch","result"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"../components/Header/Header.jsx\";\n\nimport album_1 from \"../assets/img/album_1.png\";\nimport left_arrow from \"../assets/img/left-arrow.png\";\nimport last_page from \"../assets/img/last_page.png\";\nimport next_page from \"../assets/img/next_page.png\";\nimport last_page_gray from \"../assets/img/last_page_gray.png\";\nimport next_page_gray from \"../assets/img/next_page_gray.png\";\n\nimport { updateSearchResult } from \"../actions\";\n\nvar Spotify = require('spotify-web-api-js');\nvar spotifyApi = new Spotify();\nspotifyApi.setAccessToken('BQBpmXCRww0_J8QihEuhgG23uOcSJJv3M5JjIZln2uLxEsKbHF4siuIgvoBdxNf4cyUqGmhV0-N_SYAMFic');\n\nclass App extends React.Component {\n  state = {\n    selectedTrack: \"\",\n    all_tracks: \"\",\n    current_track_page: 1,\n  };\n\n  loadMoreTracks(tracks) {\n    const req = tracks.next;\n    spotifyApi.searchTracks(req)\n    .then(\n      function(data) {\n        console.log(data);\n        // if(data.length === 0) {\n        //   data.result_flag = 0;\n        //   this.props.updateSearchResult(data);\n        // }\n        // else {\n        //   data.result_flag = 1;\n        //   this.props.updateSearchResult(data);\n        // }\n      }.bind(this),\n      function(err) {\n        console.log(err);\n        // if(search_value === '') {\n        //   err.result_flag = 0;\n        //   this.props.updateSearchResult(err);\n        // }\n        // else {\n        //   err.result_flag = 2;\n        //   this.props.updateSearchResult(err);\n        // }\n      }.bind(this)\n    );\n  }\n\n  handleTrackClick(track) {\n    this.setState({ selectedTrack: track });\n  }\n\n  render() {\n    const { selectedTrack } = this.state;\n    const { result_flag, tracks_data, tracks_currentPage } = this.props;\n\n    const album_bg_div_class =\n      result_flag === 0\n        ? \"bg_fullsize album_bg_div\"\n        : \"bg_smallsize album_bg_div\";\n    const album_bg_class =\n      result_flag === 0\n        ? \"bg_image_fullsize album_bg\"\n        : \"bg_image_smallsize album_bg\";\n    const tracks =\n      tracks_data === \"\" ? undefined : tracks_data[tracks_currentPage].tracks;\n\n    return (\n      <div>\n        <div className={album_bg_div_class}>\n          <img\n            className={album_bg_class}\n            src={\n              selectedTrack === \"\" ||\n              selectedTrack.album.images[0] === undefined\n                ? album_1\n                : selectedTrack.album.images[0].url\n            }\n            alt=\"album_1\"\n          />\n        </div>\n\n        <Header />\n\n        {tracks !== undefined && (\n          <div className=\"content\">\n            <div>\n              <div className=\"album_backshadow\" />\n              <div className=\"album_selected\">\n                {selectedTrack === \"\" ? (\n                  <img\n                    className=\"album_selected_cover\"\n                    src={album_1}\n                    alt=\"album_1\"\n                  />\n                ) : selectedTrack.album.images[0] === undefined ? (\n                  <div\n                    className=\"album_selected_cover\"\n                    style={{ display: \"inline-block\", backgroundColor: \"gray\" }}\n                  />\n                ) : (\n                  <img\n                    className=\"album_selected_cover\"\n                    src={selectedTrack.album.images[0].url}\n                    alt=\"album_1\"\n                  />\n                )}\n              </div>\n            </div>\n            <div className=\"search_content\">\n              <div className=\"search_result\">\n                <div className=\"search_result_title\">\n                  <img\n                    className=\"left_arrow\"\n                    src={left_arrow}\n                    alt=\"left_arrow\"\n                    onClick={() =>\n                      this.props.updateSearchResult({ result_flag: 0 })\n                    }\n                  />\n                  <span className=\"search_result_title_text\">\n                    Search result\n                  </span>\n                </div>\n                <div className=\"search_result_content\">\n                  {tracks.items.length !== 0 && (\n                    <div>\n                      <div className=\"search_result_item\">Tracks</div>\n                      {tracks.items.map((track) => {\n                        return (\n                          <div\n                            className=\"track_row\"\n                            key={track.id}\n                            onClick={() => this.handleTrackClick(track)}\n                          >\n                            <span className=\"helper\" />\n                            {track.album.images[2] === undefined ? (\n                              <div\n                                className=\"track_row_cover\"\n                                style={{\n                                  display: \"inline-block\",\n                                  width: \"30px\",\n                                  height: \"30px\",\n                                  backgroundColor: \"gray\",\n                                }}\n                              />\n                            ) : (\n                              <img\n                                className=\"track_row_cover\"\n                                src={track.album.images[2].url}\n                                width={30}\n                              />\n                            )}\n                            <span className=\"track_row_name\">{track.name}</span>\n                          </div>\n                        );\n                      })}\n                      <div className=\"search_result_operations\">\n                        <img\n                          src={\n                            tracks.previous === null ? last_page_gray : last_page\n                          }\n                        />\n                        <span className=\"search_result_current_page\">\n                          {tracks_currentPage}\n                        </span>\n                        <img\n                          src={\n                            tracks.next === null ? next_page_gray : next_page\n                          }\n                          onClick={() => this.loadMoreTracks(tracks)}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  <div style={{ height: \"60px\" }} />\n                </div>\n              </div>\n              <div className=\"sidebar\"></div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  result_flag: state.searchResult.result_flag,\n  tracks_data: state.searchResult.tracks_data,\n  tracks_currentPage: state.searchResult.tracks_currentPage,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSearchResult: (result) => dispatch(updateSearchResult(result)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}