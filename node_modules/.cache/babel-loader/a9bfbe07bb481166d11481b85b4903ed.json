{"ast":null,"code":"var _jsxFileName = \"/Users/yediwang/spotify-example/src/layouts/Layout.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header/Header.jsx\";\nimport album_1 from \"../assets/img/album_1.png\";\nimport left_arrow from \"../assets/img/left-arrow.png\";\nimport { updateSearchResult } from '../actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTrack: ''\n    };\n  }\n\n  componentDidUpdate() {}\n\n  loadMoreTracks() {\n    const search_value = event.target.value;\n\n    var Spotify = require('spotify-web-api-js');\n\n    var spotifyApi = new Spotify();\n    spotifyApi.setAccessToken('BQBpmXCRww0_J8QihEuhgG23uOcSJJv3M5JjIZln2uLxEsKbHF4siuIgvoBdxNf4cyUqGmhV0-N_SYAMFic');\n    spotifyApi.searchTracks(search_value, {\n      limit: 8\n    }).then(function (data) {\n      // console.log(data);\n      if (data.length === 0) {\n        data.result_flag = 0;\n        this.props.updateSearchResult(data);\n      } else {\n        data.result_flag = 1;\n        this.props.updateSearchResult(data);\n      }\n    }.bind(this), function (err) {\n      // console.log(err);\n      if (search_value === '') {\n        err.result_flag = 0;\n        this.props.updateSearchResult(err);\n      } else {\n        err.result_flag = 2;\n        this.props.updateSearchResult(err);\n      }\n    }.bind(this));\n  }\n\n  handleTrackClick(track) {\n    this.setState({\n      selectedTrack: track\n    });\n  }\n\n  render() {\n    const selectedTrack = this.state.selectedTrack;\n    const album_bg_div_class = this.props.searchResult_flag === 0 ? \"bg_fullsize album_bg_div\" : \"bg_smallsize album_bg_div\";\n    const album_bg_class = this.props.searchResult_flag === 0 ? \"bg_image_fullsize album_bg\" : \"bg_image_smallsize album_bg\";\n    const tracks = this.props.searchResult_tracks;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: album_bg_div_class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: album_bg_class,\n      src: selectedTrack === '' ? album_1 : selectedTrack.album.images[0].url,\n      alt: \"album_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), tracks !== undefined && React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"album_backshadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"album_selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"album_selected_cover\",\n      src: selectedTrack === '' ? album_1 : selectedTrack.album.images[0].url,\n      alt: \"album_1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"search_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"left_arrow\",\n      src: left_arrow,\n      alt: \"left_arrow\",\n      onClick: () => this.props.updateSearchResult({\n        result_flag: 0\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"search_result_title_text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Search result\")), React.createElement(\"div\", {\n      className: \"search_result_content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search_result_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Tracks\"), this.props.searchResult_tracks.items.map(track => {\n      return React.createElement(\"div\", {\n        className: \"track_row\",\n        key: track.id,\n        onClick: () => this.handleTrackClick(track),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"helper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"track_row_cover\",\n        src: track.album.images[2].url,\n        width: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"track_row_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, track.name));\n    }))), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  searchResult_flag: state.searchResult.result_flag,\n  searchResult_tracks: state.searchResult.tracks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/yediwang/spotify-example/src/layouts/Layout.jsx"],"names":["React","connect","Header","album_1","left_arrow","updateSearchResult","App","Component","state","selectedTrack","componentDidUpdate","loadMoreTracks","search_value","event","target","value","Spotify","require","spotifyApi","setAccessToken","searchTracks","limit","then","data","length","result_flag","props","bind","err","handleTrackClick","track","setState","render","album_bg_div_class","searchResult_flag","album_bg_class","tracks","searchResult_tracks","album","images","url","undefined","items","map","id","name","mapStateToProps","searchResult","mapDispatchToProps","dispatch","result"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,kBAAT,QAAmC,YAAnC;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,aAAa,EAAE;AADT,KADwB;AAAA;;AAKhCC,EAAAA,kBAAkB,GAAG,CACpB;;AAEDC,EAAAA,cAAc,GAAG;AACf,UAAMC,YAAY,GAAGC,KAAK,CAACC,MAAN,CAAaC,KAAlC;;AACA,QAAIC,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,QAAIC,UAAU,GAAG,IAAIF,OAAJ,EAAjB;AACAE,IAAAA,UAAU,CAACC,cAAX,CAA0B,qFAA1B;AACAD,IAAAA,UAAU,CAACE,YAAX,CAAwBR,YAAxB,EAAsC;AAACS,MAAAA,KAAK,EAAE;AAAR,KAAtC,EACCC,IADD,CAEE,UAASC,IAAT,EAAe;AACb;AACA,UAAGA,IAAI,CAACC,MAAL,KAAgB,CAAnB,EAAsB;AACpBD,QAAAA,IAAI,CAACE,WAAL,GAAmB,CAAnB;AACA,aAAKC,KAAL,CAAWrB,kBAAX,CAA8BkB,IAA9B;AACD,OAHD,MAIK;AACHA,QAAAA,IAAI,CAACE,WAAL,GAAmB,CAAnB;AACA,aAAKC,KAAL,CAAWrB,kBAAX,CAA8BkB,IAA9B;AACD;AACF,KAVD,CAUEI,IAVF,CAUO,IAVP,CAFF,EAaE,UAASC,GAAT,EAAc;AACZ;AACA,UAAGhB,YAAY,KAAK,EAApB,EAAwB;AACtBgB,QAAAA,GAAG,CAACH,WAAJ,GAAkB,CAAlB;AACA,aAAKC,KAAL,CAAWrB,kBAAX,CAA8BuB,GAA9B;AACD,OAHD,MAIK;AACHA,QAAAA,GAAG,CAACH,WAAJ,GAAkB,CAAlB;AACA,aAAKC,KAAL,CAAWrB,kBAAX,CAA8BuB,GAA9B;AACD;AACF,KAVD,CAUED,IAVF,CAUO,IAVP,CAbF;AAyBD;;AAEDE,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACtB,SAAKC,QAAL,CAAc;AAACtB,MAAAA,aAAa,EAAEqB;AAAhB,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACAvB,aADA,GACiB,KAAKD,KADtB,CACAC,aADA;AAEP,UAAMwB,kBAAkB,GAAG,KAAKP,KAAL,CAAWQ,iBAAX,KAAiC,CAAjC,GAAqC,0BAArC,GAAkE,2BAA7F;AACA,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWQ,iBAAX,KAAiC,CAAjC,GAAqC,4BAArC,GAAoE,6BAA3F;AACA,UAAME,MAAM,GAAG,KAAKV,KAAL,CAAWW,mBAA1B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEJ,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEE,cAAhB;AAAgC,MAAA,GAAG,EAAE1B,aAAa,KAAK,EAAlB,GAAuBN,OAAvB,GAAiCM,aAAa,CAAC6B,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAApG;AAAyG,MAAA,GAAG,EAAC,SAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOGJ,MAAM,KAAKK,SAAX,IACD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAEhC,aAAa,KAAK,EAAlB,GAAuBN,OAAvB,GAAiCM,aAAa,CAAC6B,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAA1G;AAA+G,MAAA,GAAG,EAAC,SAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEpC,UAAjC;AAA6C,MAAA,GAAG,EAAC,YAAjD;AAA8D,MAAA,OAAO,EAAE,MAAM,KAAKsB,KAAL,CAAWrB,kBAAX,CAA8B;AAACoB,QAAAA,WAAW,EAAE;AAAd,OAA9B,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKC,KAAL,CAAWW,mBAAX,CAA+BK,KAA/B,CAAqCC,GAArC,CAAyCb,KAAK,IAAI;AACjD,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEA,KAAK,CAACc,EAAtC;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKf,gBAAL,CAAsBC,KAAtB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAEA,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,GAA5D;AAAiE,QAAA,KAAK,EAAE,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCV,KAAK,CAACe,IAAxC,CAHF,CADF;AAOD,KARA,CAFH,CALF,CADF,EAmBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CAPF,CARF,CADF;AA0CD;;AA5F+B;;AA+FlC,MAAMC,eAAe,GAAItC,KAAD,KAAY;AAClC0B,EAAAA,iBAAiB,EAAE1B,KAAK,CAACuC,YAAN,CAAmBtB,WADJ;AAElCY,EAAAA,mBAAmB,EAAE7B,KAAK,CAACuC,YAAN,CAAmBX;AAFN,CAAZ,CAAxB;;AAKA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxC5C,EAAAA,kBAAkB,EAAE6C,MAAM,IAAID,QAAQ,CAAC5C,kBAAkB,CAAC6C,MAAD,CAAnB;AADE,CAAf,CAA3B;;AAIA,eAAejD,OAAO,CACpB6C,eADoB,EAEpBE,kBAFoB,CAAP,CAGb1C,GAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"../components/Header/Header.jsx\";\n\nimport album_1 from \"../assets/img/album_1.png\";\nimport left_arrow from \"../assets/img/left-arrow.png\";\n\nimport { updateSearchResult } from '../actions';\n\nclass App extends React.Component {\n  state = {\n    selectedTrack: ''\n  }\n\n  componentDidUpdate() {\n  }\n\n  loadMoreTracks() {\n    const search_value = event.target.value;\n    var Spotify = require('spotify-web-api-js');\n    var spotifyApi = new Spotify();\n    spotifyApi.setAccessToken('BQBpmXCRww0_J8QihEuhgG23uOcSJJv3M5JjIZln2uLxEsKbHF4siuIgvoBdxNf4cyUqGmhV0-N_SYAMFic');\n    spotifyApi.searchTracks(search_value, {limit: 8})\n    .then(\n      function(data) {\n        // console.log(data);\n        if(data.length === 0) {\n          data.result_flag = 0;\n          this.props.updateSearchResult(data);\n        }\n        else {\n          data.result_flag = 1;\n          this.props.updateSearchResult(data);\n        }\n      }.bind(this),\n      function(err) {\n        // console.log(err);\n        if(search_value === '') {\n          err.result_flag = 0;\n          this.props.updateSearchResult(err);\n        }\n        else {\n          err.result_flag = 2;\n          this.props.updateSearchResult(err);\n        }\n      }.bind(this)\n    );\n  }\n\n  handleTrackClick(track) {\n    this.setState({selectedTrack: track});\n  }\n\n  render() {\n    const {selectedTrack} = this.state;\n    const album_bg_div_class = this.props.searchResult_flag === 0 ? \"bg_fullsize album_bg_div\" : \"bg_smallsize album_bg_div\";\n    const album_bg_class = this.props.searchResult_flag === 0 ? \"bg_image_fullsize album_bg\" : \"bg_image_smallsize album_bg\";\n    const tracks = this.props.searchResult_tracks;\n\n    return (\n      <div>\n        <div className={album_bg_div_class}>\n          <img className={album_bg_class} src={selectedTrack === '' ? album_1 : selectedTrack.album.images[0].url} alt=\"album_1\" />\n        </div>\n\n        <Header />\n\n        {tracks !== undefined &&\n        <div className=\"content\">\n          <div>\n            <div className=\"album_backshadow\" />\n            <div className=\"album_selected\">\n              <img className=\"album_selected_cover\" src={selectedTrack === '' ? album_1 : selectedTrack.album.images[0].url} alt=\"album_1\" />\n            </div>\n          </div>\n          <div className=\"search_content\">\n            <div className=\"search_result\">\n              <div className=\"search_result_title\">\n                <img className=\"left_arrow\" src={left_arrow} alt='left_arrow' onClick={() => this.props.updateSearchResult({result_flag: 0})}/>\n                <span className=\"search_result_title_text\">Search result</span>\n              </div>\n              <div className=\"search_result_content\">\n                <div className=\"search_result_item\">Tracks</div>\n                {this.props.searchResult_tracks.items.map(track => {\n                  return (\n                    <div className=\"track_row\" key={track.id} onClick={() => this.handleTrackClick(track)}>\n                      <span className=\"helper\" />\n                      <img className=\"track_row_cover\" src={track.album.images[2].url} width={30} />\n                      <span className=\"track_row_name\">{track.name}</span>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n            <div className=\"sidebar\">\n\n            </div>\n          </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchResult_flag: state.searchResult.result_flag,\n  searchResult_tracks: state.searchResult.tracks\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSearchResult: result => dispatch(updateSearchResult(result))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}